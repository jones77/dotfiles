set nocompatible              " be iMproved, required
filetype off                  " required
set encoding=utf-8

"" VundleBegin
" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')
" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'
""

" http://liuchengxu.org/posts/use-vim-as-a-python-ide/
Plugin 'Vimjas/vim-python-pep8-indent'
Plugin 'brooth/far.vim'
Plugin 'cespare/vim-toml'
Plugin 'chr4/nginx.vim'
Plugin 'chrisbra/Recover.vim'
Plugin 'ctrlpvim/ctrlp.vim'
Plugin 'editorconfig/editorconfig-vim'
Plugin 'exu/pgsql.vim'
Plugin 'fatih/vim-go'
Plugin 'flazz/vim-colorschemes'
Plugin 'gregsexton/gitv'
Plugin 'guns/xterm-color-table.vim'
Plugin 'hashivim/vim-terraform'
Plugin 'hashivim/vim-vagrant'
Plugin 'heavenshell/vim-pydocstring'
Plugin 'itchyny/lightline.vim'
Plugin 'jlanzarotta/bufexplorer'
Plugin 'maralla/completor.vim'
Plugin 'mileszs/ack.vim'
Plugin 'mkitt/tabline.vim'
Plugin 'nvie/vim-flake8'
Plugin 'powerline/powerline'
Plugin 'scrooloose/nerdtree'
Plugin 'thiderman/vim-supervisor'
Plugin 'tmux-plugins/vim-tmux'
Plugin 'tpope/vim-abolish'  " https://stackoverflow.com/a/8783131/469045
Plugin 'tpope/vim-capslock'
Plugin 'tpope/vim-commentary'
Plugin 'tpope/vim-eunuch'
Plugin 'tpope/vim-fugitive'
Plugin 'tpope/vim-obsession'
Plugin 'tpope/vim-repeat'
Plugin 'vim-scripts/burnttoast256'
Plugin 'vim-syntastic/syntastic'
Plugin 'zhou13/vim-easyescape'

""
" All of your Plugins must be added before the following line
call vundle#end()         " required
filetype plugin indent on " required
" To ignore plugin indent changes, instead use:
"   filetype plugin on
" :PluginUpdate, :PluginList, :PluginInstall - `!` also update
" :PluginSearch foo - searches for foo, `!` refresh local cache
" :PluginClean - `!` auto-approve
"   see :h vundle for more details or wiki for FAQ
"" EndVundle

filetype plugin on
let &runtimepath.=',~/.vim/bundle/ale'
" http://www.robmeerman.co.uk/unix/256colours
" set term=putty-256color
set term=xterm
set t_Co=256

set background=dark
colorscheme burnttoast256

"
" Vundle Options
" 
let g:NERDTreeDirArrows=0
let g:NERDTreeShowHidden=1

" lightline
set showtabline=2
set laststatus=2  " To make the above work
" https://github.com/acepukas/dotfiles/blob/master/vim/plugin/lightline_config.vim#L37
        " \ 'separator': { 'left': 'ÓÇ∞', 'right': 'ÓÇ≤' },
        " \ 'subseparator': { 'left': 'ÓÇ±', 'right': 'ÓÇ≥' },
let g:lightline = {
        \ 'separator': { 'left': '', 'right': '' },
        \ 'subseparator': { 'left': '', 'right': '' },
        \ 'tabline': {
        \   'left': [ [ 'tabs' ] ],
        \   'right': [ [ 'obession' ] ]
        \ },
        \ 'colorscheme': 'one',
        \ 'component_function': {
        \   'obession': 'MyObsession'
        \ }
    \ }

function! MyObsession()
  if exists("*ObsessionStatus")
    return ObsessionStatus('ëÅç', ' ‚É§')
  endif
endfunction
 
let g:syntastic_mode_map = {'mode': 'passive'}
let g:syntastic_python_checkers=['flake8']
" FIXME: Why doesn't this work?
let g:syntastic_error_symbol = '‚úò'
let g:syntastic_style_error_symbol = '‚úò'
let g:syntastic_warning_symbol = '‚Åà'
let g:syntastic_style_warning_symbol = '‚Åà'

let g:terraform_align=1
let g:terraform_fmt_on_save=1
autocmd FileType terraform setlocal commentstring=#%s

let g:ctrlp_map = '<c-p>'
let g:ctrlp_cmd = 'CtrlP'
let g:ctrlp_working_path_mode = 'ra'

let g:sql_type_default = 'pgsql'

" regular options
syntax on
set nofoldenable
nmap <silent> <Leader>l <Plug>(pydocstring)
" vim options circa 2003
set autochdir
set autoindent
set expandtab
set hlsearch
set ignorecase
set ruler               " show cursor position in status line
set showcmd             " show partial command in status line
set showmatch           " show matching bracket
set smarttab
set shiftwidth=4
set softtabstop=4       " no hard tabs
set textwidth=80
set whichwrap=b,s,,>,h,l
set wrap                " wrap lines
set scrolloff=4
set fileformat=unix

set t_vb= "who needs a visual bell anyway?
set t_te= "stops vim clearing the screen
command! -nargs=? T :tabnew  " :T is New Tab
" Tab Left is H, Tab Right is L
map H :tabprev<return>
map L :tabnext<return>
" Space is page down like less
map <space> 

augroup LoadOnce
    " Prevent progressively slower reloading time of .vimrc
    " http://stackoverflow.com/q/15353988
    autocmd!
    autocmd bufwritepost .vimrc source $MYVIMRC

    autocmd FileType c,cpp,python,ruby,java,sql,sh,Vagrantfile,Jenkinsfile
        \ autocmd BufWritePre <buffer> :%s/\s\+$//e
    autocmd BufNewFile,BufReadPost *.conf set filetype=toml
    autocmd BufNewFile,BufReadPost *.md set filetype=markdown
    autocmd BufNewFile,BufReadPost Jenkinsfile set filetype=groovy
    autocmd Filetype gitcommit setlocal spell textwidth=72
    autocmd Filetype yaml set shiftwidth=2 softtabstop=2
    autocmd FileType python setlocal textwidth=79
augroup END

set number
set ttyfast
set clipboard^=unnamed  " FIXME: Document this

set mouse=a
map <ScrollWheelUp> <C-U>
map <ScrollWheelDown> <C-D>

" Not sure why these need to be at the end to be respected.
" hi CursorLineNr term=bold ctermfg=22 ctermbg=232
hi ColorColumn ctermbg=233
hi LineNr term=bold ctermfg=239 ctermbg=233
set colorcolumn=40,80,120,160,200,240
